version: '3.8'

services:
  # Next.js Application
  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hireflutter-nextjs
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - WORDPRESS_API_URL=http://wordpress:80/wp-json/wp/v2
    networks:
      - app-network
    depends_on:
      - wordpress

  # WordPress CMS
  wordpress:
    image: wordpress:6.4-php8.2-apache
    container_name: hireflutter-wordpress
    restart: unless-stopped
    environment:
      WORDPRESS_DB_HOST: mysql:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD:-wordpress_password_123}
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_TABLE_PREFIX: wp_
      WORDPRESS_DEBUG: 0
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_HOME', 'https://hirededicatedflutterdeveloper.com/cms');
        define('WP_SITEURL', 'https://hirededicatedflutterdeveloper.com/cms');
        define('FORCE_SSL_ADMIN', true);
        if (isset($$_SERVER['HTTP_X_FORWARDED_PROTO']) && $$_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') {
          $$_SERVER['HTTPS'] = 'on';
        }
    volumes:
      - wordpress_data:/var/www/html
      - ./wordpress/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
      - app-network
    depends_on:
      - mysql

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: hireflutter-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: ${WORDPRESS_DB_PASSWORD:-wordpress_password_123}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password_123}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: hireflutter-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - app-network
    depends_on:
      - nextjs-app
      - wordpress

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: hireflutter-certbot
    restart: "no"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait; done;'"

volumes:
  wordpress_data:
  mysql_data:

networks:
  app-network:
    driver: bridge
